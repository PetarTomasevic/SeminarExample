@page "/"
@using SeminarExample.Models;
@inject HttpClient httpClient;
@inject NavigationManager navManager;

<h3>Lista Novih Radnih Zadataka</h3>
@if(IsError)
{
    <p>Došlo je do greške kod zatvaranja zadatka. Pokušajte ponovo.</p>
}
<ul>
    @foreach (var item in zadaciNovi)
    {
        <li>
            <div class="card">
                <h5 class="card-header">
                   Zadatak:<br>
                    <b> @item.ToDo </b>
                </h5>
                <div class="card-body">
                    <h5 class="card-title">
                        Zaduženi Radnik:
                        @item.RadnikIme,  @item.RadnikPrezime
                    </h5>
                    <p class="card-text"> @item.OpisPosla</p>
                    <button class="btn btn-primary" @onclick="()=>Rijeseno(item.Id)">Postavi kao riješen</button>
               
                </div>
            </div>
        </li>
    }

</ul>

@code {
    public List<RadniZadatak> zadaciNovi = new List<RadniZadatak>();
    public bool IsError = false;

    protected override async Task OnInitializedAsync()
    {

        zadaciNovi = await DohvatiListuAsync();
    }

    public async Task<List<RadniZadatak>> DohvatiListuAsync()
    {
        List<RadniZadatak> listaSaServera = new List<RadniZadatak>();
        var result = await httpClient.GetAsync("https://expertvjezbeapi.azurewebsites.net/api/ToDoSeminars");
        if (result.IsSuccessStatusCode)
        {
            listaSaServera = await result.Content.ReadFromJsonAsync<List<RadniZadatak>>();

            listaSaServera = listaSaServera.Where(x=>x.IsDone==false).OrderBy(x => x.ToDo).ToList();
        }

        return listaSaServera;

    }

    public async Task Rijeseno(int itemId)
    {
        var result = await httpClient.PostAsJsonAsync($"https://expertvjezbeapi.azurewebsites.net/api/ToDoSeminars/IsDone/{itemId}","");
        if (result.IsSuccessStatusCode)
        {
            zadaciNovi = await DohvatiListuAsync();
            StateHasChanged();
        }
        else
        {
            IsError = true;
        }


    }

   
}
