@page "/rijeseno"
@using SeminarExample.Models;
@inject HttpClient httpClient;
@inject NavigationManager navManager;

<h3>Lista Riješenih Radnih Zadataka</h3>
@if (IsError)
{
    <p>Došlo je do greške kod brisanja zadatka. Pokušajte ponovo.</p>
}
<ul>
    @foreach (var item in zadaciRijeseni)
    {
        <li>
            <div class="card">
                <h5 class="card-header">
                    Zadatak:<br>
                    <b> @item.ToDo </b>
                </h5>
                <div class="card-body">
                    <h5 class="card-title">
                        Zaduženi Radnik:
                        @item.RadnikIme,  @item.RadnikPrezime
                    </h5>
                    <p class="card-text"> @item.OpisPosla</p>
                    @if(item.IsDone)
                    {
                        <p class="card-title">
                            Uspješno završen zadatak
                        </p>
                        <p class="card-title">@item.Datum</p>

                    }
                    <button class="btn btn-primary" @onclick="()=>Obrisi(item.Id)">Obriši riješeni zadatak</button>

                </div>
            </div>
           
           
        </li>
    }

</ul>

@code {
    public List<RadniZadatak> zadaciRijeseni = new List<RadniZadatak>();
    public bool IsError = false;

    protected override async Task OnInitializedAsync()
    {

        zadaciRijeseni = await DohvatiListuAsync();
    }

    public async Task<List<RadniZadatak>> DohvatiListuAsync()
    {
        List<RadniZadatak> listaSaServera = new List<RadniZadatak>();
        var result = await httpClient.GetAsync("https://expertvjezbeapi.azurewebsites.net/api/ToDoSeminars");
        if (result.IsSuccessStatusCode)
        {
            listaSaServera = await result.Content.ReadFromJsonAsync<List<RadniZadatak>>();

            listaSaServera = listaSaServera.Where(x => x.IsDone == true).OrderByDescending(x => x.Datum).ToList();
        }

        return listaSaServera;

    }

    public async Task Obrisi(int itemId)
    {
        navManager.NavigateTo($"obrisi/{itemId}");
    }
   
}
